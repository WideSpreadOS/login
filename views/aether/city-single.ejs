<style>
    p {
        color: #fff;
    }
    .custom-select {
  position: relative;
  font-family: Arial;
  background:rgba(255, 255, 255, 0.3);
  margin-bottom: 30px;
  height: 100%;
  width: 100%;
  padding: 0;
  border-top: groove 2px lightskyblue;
    border-bottom: groove 2px lightskyblue;
}

.custom-select select {
  display: none; /*hide original SELECT element:*/
}

.select-selected {
  background-color: rgba(255, 255, 255, 0.3);
  backdrop-filter: blur(4px);
  transition: ease-in 0.3s;
}

/*style the arrow inside the select element:*/
.select-selected:after {
  position: absolute;
  content: "";
  top: 14px;
  right: 10px;
  width: 0;
  height: 0;
  border: 6px solid transparent;
  border-color: #fff transparent transparent transparent;
  transition: ease-in 0.3s;
}

/*point the arrow upwards when the select box is open (active):*/
.select-selected.select-arrow-active:after {
  border-color: transparent transparent rgba(0, 0, 0, 0.7) transparent;
  top: 7px;
  transition: ease-in 0.3s;
}

/*style the items (options), including the selected item:*/
.select-items div,.select-selected {
  color: #ffffff;
  padding: 8px 16px;
  border: 1px solid transparent;
  border-color: transparent transparent rgba(255, 255, 255, 0.3) transparent;
  cursor: pointer;
  user-select: none;
  transition: ease-in 0.3s;
}

/*style items (options):*/
.select-items {
  position: absolute;
  background: rgba(135, 206, 250, 0.3);
  border-bottom: groove 2px #fff;
  backdrop-filter: blur(4px);
  max-height: 310px;
  overflow-y: scroll;
  top: 100%;
  left: 5%;
  right: 5%;
  margin-top: 2px;
  z-index: 20;
  box-shadow: 0 6px 6px rgba(0, 0, 0, 0.5);
  border-bottom-left-radius: 8px;
  border-bottom-right-radius: 8px;
  transition: ease-in 0.3s;
}

/*hide the items when the select box is closed:*/
.select-hide {
  display: none;
}

.select-items div:hover, .same-as-selected {
  background-color: rgba(0, 0, 0, 0.1);
}
.page-header {
        width: 100%;
        text-align: center;

    }
    .unit-container {
        width: 100%;
        border-radius: 8px;
        margin-bottom: 20px;
    }
    .unit-header {
        width: 100%;
        background: rgba(0, 0, 0, 0.3);
        backdrop-filter: blur(2px);
        padding: 5px;
        border-bottom: groove 2px lightskyblue;
        border-top-left-radius: 8px;
        border-top-right-radius: 8px;
    }
    .unit-header h3 {
        text-align: center;
        color: #fff;
    }
    .unit-header a {
        color: #fff;
    }
    .unit-header h5 {
        color: #fff;
        text-align: center;
    }
    .add-universe {
        background: rgba(0, 0, 0, 0.3);
        padding-top: 5px;
        padding-bottom: 5px;
        border-radius: 8px;
        border-top: groove 2px lightskyblue;
        border-bottom: groove 2px lightskyblue;
        box-shadow: 0 6px 6px rgba(0, 0, 0, 0.5);
    }
    .add-universe h5 {
        text-align: center;
        padding: 10px;
    }
    .add-universe input {
        width: 100%;
        border: none;
        outline: none;
        border-top: groove 2px lightskyblue;
        border-bottom: groove 2px lightskyblue;
        background: rgba(255, 255, 255, 0.3);
        backdrop-filter: blur(2px);
        color: #fff;
        padding: 5px;
        transition: ease-in 0.3s;
        margin-bottom: 15px;
    }
    .add-universe input:focus {
        outline: none;
        border: none;
        background: rgba(135, 206, 250, 0.3);
        box-shadow: inset 0 0 10px rgba(0, 0, 0, 0.5);
        border-top: groove 2px #fff;
        border-bottom: groove 2px #fff;
        transition: ease-in 0.3s;
    }
    .add-universe input::placeholder {
        color: #fff;
    }
    button {
        width: 90%;
        margin-left: 5%;
        background: rgba(0, 128, 0, 0.3);
        border: groove 2px green;
        border-top: none;
        border-bottom-left-radius: 8px;
        border-bottom-right-radius: 8px;
        color: #fff;
        padding: 5px;
        box-shadow: 0 4px 4px rgba(0, 0, 0, 0.5);
}
.list-item {
    background: rgba(135, 206, 250, 0.3);
    border-left: groove 2px #fff;
    border-right: groove 2px #fff;
    border-radius: 8px;
    margin-bottom: 10px;
    text-align: center;
    padding: 10px;
    font-size: 1.2rem;
    color: #fff;
    box-shadow: inset 0 0 10px rgba(255, 255, 255, 0.5);
}
.list-item p {
    margin-bottom: 0;
}
.list-item a {
    color: rgba(255, 255, 255, 0.75);
    text-shadow: 0 0 18px rgba(135, 206, 250, 0.5);
}
</style>

<div class="page-header">
    <h1><%= city.name %></h1>
</div>

<div class="spread-break">
    <hr>
</div>


<h5>Places</h5>
<% places.forEach(function(place) { %>
    <div class="list-item">
        <p><a href="/aether/universe/<%= universe.id %>/galaxy/<%= galaxy.id %>/solar-system/<%= solarSystem.id %>/planet/<%= planet.id %>/sector/<%= sector.id %>/city/<%= cityId %>/place/<%= place.id %>"><%= place.name %></a></p>
    </div>
<% }) %>

<div class="spread-break">
    <hr>
</div>

<div class="add-universe">
    <h5>Add a New Place</h5>
    <form action="/aether/universe/<%= universe.id %>/galaxy/<%= galaxy.id %>/solar-system/<%= solarSystem.id %>/planet/<%= planet.id %>/sector/<%= sector.id %>/city/<%= cityId %>/place/add" method="post">
        <input type="text" name="name" placeholder="Name of Place">
        <input type="text" name="city" placeholder="For City" value="<%= cityId %>">
        <input type="number" name="dimXpos" placeholder="Dimension X Positive">
        <input type="number" name="dimXneg" placeholder="Dimension X Negative">
        <input type="number" name="dimXspeed" placeholder="Dimension X Speed">
        <input type="number" name="dimYpos" placeholder="Dimension Y Positive">
        <input type="number" name="dimYneg" placeholder="Dimension Y Negative">
        <input type="number" name="dimYspeed" placeholder="Dimension Y Speed">
        <input type="number" name="dimZpos" placeholder="Dimension Z Positive">
        <input type="number" name="dimZneg" placeholder="Dimension Z Negative">
        <input type="number" name="dimZspeed" placeholder="Dimension Z Speed">
        <input type="number" name="posX" placeholder="Position X">
        <input type="number" name="posY" placeholder="Position Y">
        <input type="number" name="posZ" placeholder="Position Z">
        <input type="number" name="time" placeholder="Age in Years">
        <div class="custom-select">
        <select name="placeType" id="placeType">
            <option value="Commercial">Commercial</option>
            <option value="Industrial">Industrial</option>
            <option value="Residential">Residential</option>
            <option value="Agriculture">Agriculture</option>
            <option value="Medical">Medical</option>
            <option value="Security">Security</option>
            <option value="Storage">Storage</option>
            <option value="Maintenence">Maintenence</option>
            <option value="Travel">Travel</option>
            <option value="Entertainment">Entertainment</option>
            <option value="Stadium">Stadium</option>
            <option value="Museum">Museum</option>
            <option value="Library">Library</option>
            <option value="Utility">Utility</option>
        </select>
    </div>
        <input type="text" name="leader" placeholder="Place Owner">
    </div>
        <button type="submit">Add Place</button>
    </form>


<script>
    var x, i, j, l, ll, selElmnt, a, b, c;
    /*look for any elements with the class "custom-select":*/
    x = document.getElementsByClassName("custom-select");
    l = x.length;
    for (i = 0; i < l; i++) {
      selElmnt = x[i].getElementsByTagName("select")[0];
      ll = selElmnt.length;
      /*for each element, create a new DIV that will act as the selected item:*/
      a = document.createElement("DIV");
      a.setAttribute("class", "select-selected");
      a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
      x[i].appendChild(a);
      /*for each element, create a new DIV that will contain the option list:*/
      b = document.createElement("DIV");
      b.setAttribute("class", "select-items select-hide");
      for (j = 1; j < ll; j++) {
        /*for each option in the original select element,
        create a new DIV that will act as an option item:*/
        c = document.createElement("DIV");
        c.innerHTML = selElmnt.options[j].innerHTML;
        c.addEventListener("click", function(e) {
            /*when an item is clicked, update the original select box,
            and the selected item:*/
            var y, i, k, s, h, sl, yl;
            s = this.parentNode.parentNode.getElementsByTagName("select")[0];
            sl = s.length;
            h = this.parentNode.previousSibling;
            for (i = 0; i < sl; i++) {
              if (s.options[i].innerHTML == this.innerHTML) {
                s.selectedIndex = i;
                h.innerHTML = this.innerHTML;
                y = this.parentNode.getElementsByClassName("same-as-selected");
                yl = y.length;
                for (k = 0; k < yl; k++) {
                  y[k].removeAttribute("class");
                }
                this.setAttribute("class", "same-as-selected");
                break;
              }
            }
            h.click();
        });
        b.appendChild(c);
      }
      x[i].appendChild(b);
      a.addEventListener("click", function(e) {
          /*when the select box is clicked, close any other select boxes,
          and open/close the current select box:*/
          e.stopPropagation();
          closeAllSelect(this);
          this.nextSibling.classList.toggle("select-hide");
          this.classList.toggle("select-arrow-active");
        });
    }
    function closeAllSelect(elmnt) {
      /*a function that will close all select boxes in the document,
      except the current select box:*/
      var x, y, i, xl, yl, arrNo = [];
      x = document.getElementsByClassName("select-items");
      y = document.getElementsByClassName("select-selected");
      xl = x.length;
      yl = y.length;
      for (i = 0; i < yl; i++) {
        if (elmnt == y[i]) {
          arrNo.push(i)
        } else {
          y[i].classList.remove("select-arrow-active");
        }
      }
      for (i = 0; i < xl; i++) {
        if (arrNo.indexOf(i)) {
          x[i].classList.add("select-hide");
        }
      }
    }
    /*if the user clicks anywhere outside the select box,
    then close all select boxes:*/
    document.addEventListener("click", closeAllSelect);
    </script>